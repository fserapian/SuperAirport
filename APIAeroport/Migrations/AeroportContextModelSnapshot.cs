// <auto-generated />
using System;
using APIAeroport.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIAeroport.Migrations
{
    [DbContext(typeof(AeroportContext))]
    partial class AeroportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("APIAeroport.Models.Aeroport", b =>
                {
                    b.Property<string>("AeroportId")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("NomAeroport")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Pays")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Ville")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("AeroportId");

                    b.ToTable("Aeroports");
                });

            modelBuilder.Entity("APIAeroport.Models.Compagnie", b =>
                {
                    b.Property<string>("CompagnieId")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("NomCompagnie")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("logoUri")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CompagnieId");

                    b.ToTable("Compagnies");
                });

            modelBuilder.Entity("APIAeroport.Models.Notification", b =>
                {
                    b.Property<int>("VolCeduleId")
                        .HasColumnType("int");

                    b.Property<string>("NumTel")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DateArret")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime(6)");

                    b.HasKey("VolCeduleId", "NumTel");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("APIAeroport.Models.VolCedule", b =>
                {
                    b.Property<int>("VolCeduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePrevue")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRevisee")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Porte")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<string>("VolGeneriqueId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("VolCeduleId");

                    b.ToTable("VolCedules");
                });

            modelBuilder.Entity("APIAeroport.Models.VolGenerique", b =>
                {
                    b.Property<string>("VolGeneriqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("AeroportId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompagnieId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Direction")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("HeurePrevue")
                        .HasColumnType("datetime(6)");

                    b.HasKey("VolGeneriqueId");

                    b.ToTable("VolGeneriques");
                });
#pragma warning restore 612, 618
        }
    }
}
